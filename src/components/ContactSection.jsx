import React, { useState, useEffect } from 'react';import { MapContainer, TileLayer, Marker } from 'react-leaflet';const ContactSection = () => {  const [name, setName] = useState('');  const [email, setEmail] = useState('');  const [message, setMessage] = useState('');  const [location, setLocation] = useState(null);  const [contactInfo, setContactInfo] = useState(null);  const [submitStatus, setSubmitStatus] = useState(null);  useEffect(() => {    fetch('/api/company/location')      .then(response => response.json())      .then(data => setLocation(data))      .catch(error => console.error('Error fetching location:', error));    fetch('/api/contact/info')      .then(response => response.json())      .then(data => setContactInfo(data))      .catch(error => console.error('Error fetching contact info:', error));  }, []);  const handleSubmit = async (e) => {    e.preventDefault();    try {      const response = await fetch('/api/contact', {        method: 'POST',        headers: {          'Content-Type': 'application/json',        },        body: JSON.stringify({ name, email, message }),      });      const data = await response.json();      if (data.success) {        setSubmitStatus({ success: true, messageId: data.messageId });        setName('');        setEmail('');        setMessage('');      } else {        setSubmitStatus({ success: false, error: 'Submission failed. Please try again.' });      }    } catch (error) {      console.error('Error submitting form:', error);      setSubmitStatus({ success: false, error: 'An error occurred. Please try again later.' });    }  };  return (    <section className="bg-gray-100 py-12" id="ContactSection_1">      <div className="container mx-auto px-4">        <h2 className="text-3xl font-bold mb-8" id="ContactSection_2">Contact Us</h2>        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">          <div>            <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-md" id="ContactSection_3">              <div className="mb-4" id="ContactSection_4">                <label htmlFor="name" className="block text-gray-700 font-bold mb-2" id="ContactSection_5">Name</label>                <input                  type="text"                  id="name"                  value={name}                  onChange={(e) => setName(e.target.value)}                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                  required                />              </div>              <div className="mb-4" id="ContactSection_6">                <label htmlFor="email" className="block text-gray-700 font-bold mb-2" id="ContactSection_7">Email</label>                <input                  type="email"                  id="email"                  value={email}                  onChange={(e) => setEmail(e.target.value)}                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                  required                />              </div>              <div className="mb-4" id="ContactSection_8">                <label htmlFor="message" className="block text-gray-700 font-bold mb-2" id="ContactSection_9">Message</label>                <textarea                  id="message"                  value={message}                  onChange={(e) => setMessage(e.target.value)}                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                  rows="4"                  required                ></textarea>              </div>              <button                type="submit"                className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"                id="ContactSection_10"              >                Send Message              </button>              {submitStatus && (                <p className={`mt-4 ${submitStatus.success ? 'text-green-500' : 'text-red-500'}`} id="ContactSection_11">                  {submitStatus.success                    ? `Message sent successfully! Message ID: ${submitStatus.messageId}`                    : submitStatus.error}                </p>              )}            </form>          </div>          <div>            {location && (              <MapContainer center={[location.lat, location.lng]} zoom={13} style={{ height: '400px' }} id="ContactSection_12">                <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />                <Marker position={[location.lat, location.lng]}></Marker>              </MapContainer>            )}            {contactInfo && (              <div className="mt-8" id="ContactSection_13">                <h3 className="text-xl font-bold mb-4" id="ContactSection_14">Contact Information</h3>                <p id="ContactSection_15">Phone: {contactInfo.phone}</p>                <p id="ContactSection_16">Email: {contactInfo.email}</p>              </div>            )}          </div>        </div>      </div>    </section>  );};export default ContactSection;